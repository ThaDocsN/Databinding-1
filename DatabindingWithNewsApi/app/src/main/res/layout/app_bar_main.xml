<?xml version="1.0" encoding="utf-8"?>
<layout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools">

    <!-- We can rename the file of a generated binding class as below.
     But this is not obligatory. If we don't specify a class name, the generated file
     will be named based on the name of the layout xml file, converted to Pascal case.
     For this layout, if we didn't rename it, it would be converted from "app_bar_main"
     to AppBarMainBinding -->
    <data class="NewsListBinding" />

    <android.support.design.widget.CoordinatorLayout
        android:id="@+id/main_content"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:fitsSystemWindows="true"
        tools:context=".ui.MainActivity">

        <android.support.design.widget.AppBarLayout
            android:id="@+id/appbar"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:theme="@style/AppTheme.AppBarOverlay">

            <android.support.v7.widget.Toolbar
                android:id="@+id/toolbar"
                android:layout_width="match_parent"
                android:layout_height="?android:attr/actionBarSize"
                android:background="@color/colorPrimary"
                app:layout_scrollFlags="scroll|enterAlways"
                app:popupTheme="@style/AppTheme.PopupOverlay"
                app:title="@string/app_name"
                app:titleTextColor="@android:color/white" />

        </android.support.design.widget.AppBarLayout>

        <!-- If we use include tag, we should give it an id, so that
         we can use this id to reach to included layout from java code.
         Like: binding.included...-->
        <include
            android:id="@+id/included"
            layout="@layout/fragment_list"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            app:layout_behavior="@string/appbar_scrolling_view_behavior" />

    </android.support.design.widget.CoordinatorLayout>

</layout>